name: Distribute Grain
on:
  # A new Cred interval every Sunday. We'll distribute Grain 5 minutes
  # after the new interval
  schedule:
    - cron: 5 0 * * 0 # 00:05 UTC, 16:05 PST
  push:
    branches:
      - "graintest-*" # won't actually update ledger or deploy frontend

jobs:
  distribute-grain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: calc

      - name: "[debug] Check GitHub event name"
        # This is used to determine whether we actually deploy to GitHub
        # Pages, so we print it upfront to aid with debugging.
        run: echo ${{ github.event_name }}

      - name: Install Packages üîß
        run: |
          cd $GITHUB_WORKSPACE/calc
          pwd
          yarn --frozen-lockfile

      - name: Load Data into Graph üîå
        run: |
          cd $GITHUB_WORKSPACE/calc
          yarn load
          yarn graph
        env:
          SOURCECRED_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCECRED_DISCORD_TOKEN: ${{ secrets.SOURCECRED_DISCORD_TOKEN }}

      - name: Compute Cred üßÆ
        run: |
          cd $GITHUB_WORKSPACE/calc
          yarn score

      - name: Distribute Grain üí∏
        run: |
          cd $GITHUB_WORKSPACE/calc
          yarn grain

      - name: Commit Ledger üíæ
        run: |
          cd $GITHUB_WORKSPACE/calc
          git config user.name 'credbot'
          git config user.email 'credbot@users.noreply.github.com'
          git add data/ledger.json
          git commit --allow-empty -m 'Auto-update ledger'

      - name: Push Ledger
        run: |
          cd $GITHUB_WORKSPACE/calc
          git push

      # This is needed to delete git credentials
      # in preparation for publishing the new details
      - name: Checkout HEAD again
        uses: actions/checkout@v2
        with:
          path: deploy
          persist-credentials: false

      - name: Reinstall Packages üîß
        run: cd deploy && yarn --frozen-lockfile

      - name: Generate Frontend üèó
        run: |
          cd deploy
          yarn site
          rm -rf ./site/{output,data,config,sourcecred.json}
          cp -r $GITHUB_WORKSPACE/calc/{output,data,config,sourcecred.json} ./site/

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@3.5.7
        if: "${{ github.event_name == 'schedule' }}"
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: deploy/site
